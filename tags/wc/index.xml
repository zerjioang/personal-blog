<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wc on Curious Stuff Blog by Sergio Anguita</title><link>https://curiousstuff.eu/tags/wc/</link><description>Recent content in wc on Curious Stuff Blog by Sergio Anguita</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 02 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://curiousstuff.eu/tags/wc/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a word counter efficiently</title><link>https://curiousstuff.eu/post/building-a-word-counter-efficiently/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>https://curiousstuff.eu/post/building-a-word-counter-efficiently/</guid><description>In this small article, I dig into some caveats that make your software development better when working with files. We talk about, how file reading can be done in Go using buffered readings to speedup data access and improve our overall programm experience.
I will show you a basic example of file reading based on real example.
A real example of file reading Most unix based systems, contains a small utility called wc with stands for word count and according to man documentation, states:</description></item></channel></rss>